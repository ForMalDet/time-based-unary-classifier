"""Script to test the cross exploit performance.

Uses SDA model to compare the cross trained nginx

Author:         Zander Blasingame
Insitution:     Clarkson University
Lab:            CAMEL"""

import numpy as np
import os
import csv
import json
import logging

from models.sda_classifier import Classifier

# Start logger
logging.basicConfig(filename='status.log', filemode='w',
                    level=logging.INFO,
                    format='%(asctime)s %(message)s')


# Find number of subsets
num_tests = 10

test_num = 0
data = []

# Create model
model = Classifier(num_input=12, num_units=4, num_steps=3, std_param=6,
                   batch_size=100,
                   num_epochs=40, normalize=False)

for subset in range(5):
    train = 'data/features/time_series/nginx_keyleak/subset_{}/train_set.csv'
    test = 'data/features/time_series/nginx_rootdir/subset_{}/test_set.csv'

    train = train.format(subset)
    test = test.format(subset)

    entry = dict(
        classifier='sda',
        feature_set='time_series',
        train='keyleak',
        test='rootdir',
        subset=subset
    )

    logging.info('-'*40)
    logging.info('Training on {}'.format(train))

    model.train(train, reset_weights=True)

    entry.update(model.test(test))
    data.append(entry)
    test_num += 1

    # log data
    logging.info('Progress: {:03.2f}%'.format(
        100*(test_num/num_tests)
    ))
    logging.info(json.dumps(entry, indent=2))
    logging.info('-'*40)

for subset in range(5):
    train = 'data/features/time_series/nginx_rootdir/subset_{}/train_set.csv'
    test = 'data/features/time_series/nginx_keyleak/subset_{}/test_set.csv'

    train = train.format(subset)
    test = test.format(subset)

    entry = dict(
        classifier='sda',
        feature_set='time_series',
        train='rootdir',
        test='keyleak',
        subset=subset
    )

    logging.info('-'*40)
    logging.info('Training on {}'.format(train))

    model.train(train, reset_weights=True)

    entry.update(model.test(test))
    data.append(entry)
    test_num += 1

    # log data
    logging.info('Progress: {:03.2f}%'.format(
        100*(test_num/num_tests)
    ))
    logging.info(json.dumps(entry, indent=2))
    logging.info('-'*40)


# Write CSV
header = [
    'classifier',
    'feature_set',
    'train',
    'test',
    'subset',
    'accuracy',
    'tp_num',
    'fp_num',
    'tn_num',
    'fn_num'
]

with open('data/results_cross_exploit.csv', 'w') as f:
    writer = csv.DictWriter(f, header)
    writer.writeheader()
    writer.writerows(data)
